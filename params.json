{"tagline":"This Yii extension helps you to clear remembered filter values on GridViews, by using the additional top right image.","google":"","note":"Don't delete this file! It's used internally to help with page regeneration.","name":"Yii-clear-filters-gridview","body":"yii-clear-filters-gridview\r\n=============================\r\n\r\nThe EButtonColumnWithClearFilters Yii extension adds up some functionality to the default possibilites of CButtonColumn implementation when you use extensions to remember filter values. This extension helps you to **clear the remembered filter values**.\r\n\r\nCheck out [Remember Filters Gridview](http://www.yiiframework.com/extension/remember-filters-gridview/) extension also.\r\n\r\n**An image will be placed in the top column(on same line of AJAX filters). When clicked the filters will be cleared, the content will be refreshed with all items available.**\r\n\r\n![Please login to see the Demo image!](https://raw.github.com/pentium10/yii-clear-filters-gridview/master/res/clear_filters_10.png \"Demo\")\r\n\r\nRequirements\r\n--------------------\r\n\r\n- Yii 1.1\r\n\r\nDonate\r\n----------\r\n\r\n[Click here to donate](https://www.paypal.com/cgi-bin/webscr?cmd=_s-xclick&hosted_button_id=K9TM6HR8JQ4Z8 \"Donate\")\r\n\r\nResources\r\n---------------\r\n\r\n- **[Extension page](http://www.yiiframework.com/extension/clear-filters-gridview/) (don't forget to cast your support vote)**\r\n- [Report a bug](http://github.com/pentium10/yii-clear-filters-gridview/issues \"Report a bug\")\r\n- [Forum](http://www.yiiframework.com/forum/index.php?/topic/15845-extension-clear-filters-gridview/ \"Forum\")\r\n- [Remember Filters Gridview extension](http://www.yiiframework.com/extension/remember-filters-gridview)\r\n\r\nUsage\r\n---------\r\n\r\nStep 1\r\n--------\r\n\r\nTo use this extension, copy this file to your components/ directory, add 'import' => 'application.components.EButtonColumnWithClearFilters', [...] to your config/main.php and use this column on each widget's Column array you would like to inherit the new possibilities:\r\n\r\n\r\n```php\r\narray(\r\n  'class'=>'EButtonColumnWithClearFilters',\r\n   //'clearVisible'=>true,\r\n   //'onClick_BeforeClear'=>'alert('this js fragment executes before clear');',\r\n   //'onClick_AfterClear'=>'alert('this js fragment executes after clear');',\r\n   //'clearHtmlOptions'=>array('class'=>'custom-clear'),\r\n   //'imageUrl'=>'/path/to/custom/image/delete.png',\r\n   //'url'=>'Yii::app()->controller->createUrl(Yii::app()->controller->action->ID,array(\"clearFilters\"=>1))',\r\n   //'label'=>'My Custom Label',\r\n ),\r\n```\r\n\r\nAll posible customizations have been enumerated above, you shall comment out those that you won't override. The minial setup is just the class type for the Columns. In addition to this you can still use/override the CButtonColumn to suit your needs. \r\n\r\n- **clearVisible**: a PHP expression for determining whether the button is visible\r\n\r\n- **onClick_BeforeClear**: If you want to execute certain JS code before the filters are cleared out, use this property to pass your custom code. You are allowed to use 'return false;' only, when  you want to stop the clear to happen. This will stop all further JS code, and HTTP request to be executed. You are not allowed to use 'return true;' it will break the components usage.\r\n\r\n- **onClick_AfterClear**: If you want to execute certain JS code after clear, but before the AJAX call use this property to pass your custom code. You are allowed to use 'return false' only, when you want to stop the AJAX call to happen. This will stop the form to be reloaded.  If you want to clear the form by classic GET request, and not by ajax you shall 'return true;' here.\r\n\r\n- **clearHtmlOptions**: Associative array of html elements to be passed for the button \r\nDefault is: array('class'=>'clear','id'=>'cbcwr_clear','style'=>'text-align:center;display:block;');\r\n\r\n- **imageUrl**: image URL of the button. If not set or false, a text link is used \r\nDefault is: $this->grid->baseScriptUrl.'/delete.png'\r\n\r\n- **url**: a PHP expression for generating the URL of the button\r\nDefault is: 'Yii::app()->controller->createUrl(Yii::app()->controller->action->ID,array(\"clearFilters\"=>1))'\r\n\r\n- **label**: Label tag to be used on the button when no URL is given\r\nDefault is: Clear Filters\r\n\r\n\r\nStep 2\r\n---------\r\n\r\nIf you are using the [Remember Filters Gridview](http://www.yiiframework.com/extension/remember-filters-gridview \"http://www.yiiframework.com/extension/remember-filters-gridview\") extension, you need to add to your controller the following code. This is placed in the action method that handles the gridview display, after you have initialized your model.\r\n\r\n\r\n```php\r\nif (intval(Yii::app()->request->getParam('clearFilters'))==1) {\r\n    EButtonColumnWithClearFilters::clearFilters($this,$model);//where $this is the controller\r\n}\r\n```\r\n\r\nSample actionAdmin()\r\n\r\n```php\r\npublic function actionAdmin() {\r\n        $model = new registration('search');\r\n\t\tif (intval(Yii::app()->request->getParam('clearFilters'))==1) {\r\n\t\t\tEButtonColumnWithClearFilters::clearFilters($this,$model);//where $this is the controller\r\n\t\t}\r\n        $this->render('admin', array(\r\n            'model' => $model,\r\n        ));\r\n}\r\n```\r\n\r\nIf you don't need the clear filters button capabilities you can also pass a `clearFilters` parameter with a 1(one) value to the controller, for this you can use a link or a button. \r\n\r\n\r\nThis extension has also a pair [Remember Filters Gridview](http://www.yiiframework.com/extension/remember-filters-gridview \"http://www.yiiframework.com/extension/remember-filters-gridview\")\r\n\r\nyii, clear, filters, cgridview, gridview, store, reload, controller, model, behavior, interface, widget, stick, scenario\r\n\r\nChange Log \r\n-----------------\r\n\r\n[CHANGELOG.md](http://github.com/pentium10/yii-clear-filters-gridview/blob/master/CHANGELOG.md)\r\n\r\nContributing\r\n------------\r\n\r\n1. Fork it.\r\n2. Create a branch (`git checkout -b my_enhancement_name`)\r\n3. Commit your changes (`git commit -am \"Enhanced Javascript\"`)\r\n4. Push to the branch (`git push origin my_enhancement_name`)\r\n5. Open a [Pull Request][1]\r\n6. Enjoy a refreshing Diet Coke and wait\r\n\r\n[1]: http://github.com/pentium10/yii-clear-filters-gridview/pulls"}